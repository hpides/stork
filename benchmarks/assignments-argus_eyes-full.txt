{'variable': 'reviews', 'data_source': [{'func_call': {'from': 'pd', 'method': 'read_csv'}, 'data_file': ['datasets/amazon-reviews/reviews.csv.gz'], 'params': [{'compression': 'gzip'}, {'index_col': 0}]}, None], 'lineno': 21}
{'variable': 'products', 'data_source': [{'func_call': {'from': 'pd', 'method': 'read_csv'}, 'data_file': ['datasets/amazon-reviews/products.csv'], 'params': [{'index_col': 0}]}, None], 'lineno': 22}
{'variable': 'categories', 'data_source': [{'func_call': {'from': 'pd', 'method': 'read_csv'}, 'data_file': ['datasets/amazon-reviews/categories.csv'], 'params': [{'index_col': 0}]}, None], 'lineno': 23}
{'variable': 'ratings', 'data_source': [{'func_call': {'from': 'pd', 'method': 'read_csv'}, 'data_file': ['datasets/amazon-reviews/ratings.csv'], 'params': [{'index_col': 0}]}, None], 'lineno': 24}
{'variable': 'reviews', 'data_source': [['reviews', {'left_op': ['reviews', 'review_date'], 'operator': [<ast.GtE object at 0x7efcd729be20>], 'right': 'start_date'}]], 'lineno': 27}
{'variable': 'categories', 'data_source': [{'func_call': {'from': ['categories', 'category'], 'method': 'isin'}, 'data_file': ['target_categories'], 'params': []}, ['categories', None]], 'lineno': 28}
{'variable': 'reviews_with_ratings', 'data_source': [{'func_call': {'from': 'reviews', 'method': 'merge'}, 'data_file': ['ratings'], 'params': [{'on': 'review_id'}]}, None], 'lineno': 33}
{'variable': 'products', 'data_source': [{'func_call': {'from': 'products', 'method': 'merge'}, 'data_file': ['categories'], 'params': [{'left_on': 'category_id'}, {'right_on': 'id'}]}, None], 'lineno': 34}
{'variable': 'full_reviews', 'data_source': [{'func_call': {'from': 'reviews_with_ratings', 'method': 'merge'}, 'data_file': ['products'], 'params': [{'on': 'product_id'}]}, None], 'lineno': 35}
{'variable': ['full_reviews', 'product_title'], 'data_source': [{'func_call': {'from': ['full_reviews', 'product_title'], 'method': 'fillna'}, 'data_file': [], 'params': [{'value': ''}]}, None], 'lineno': 38}
{'variable': ['full_reviews', 'review_body'], 'data_source': [{'func_call': {'from': ['full_reviews', 'review_body'], 'method': 'fillna'}, 'data_file': [], 'params': [{'value': ''}]}, None], 'lineno': 40}
{'variable': ['full_reviews', 'title_and_review'], 'data_source': [{'func_call': {'from': ['full_reviews', 'product_title'], 'method': 'fillna'}, 'data_file': [], 'params': [{'value': ''}]}, {'func_call': {'from': ['full_reviews', 'review_body'], 'method': 'fillna'}, 'data_file': [], 'params': [{'value': ''}]}, [[None, ' '], None]], 'lineno': 43}
{'variable': 'train_data', 'data_source': [['full_reviews', {'left_op': ['full_reviews', 'review_date'], 'operator': [<ast.LtE object at 0x7efcd729bee0>], 'right': 'split_date'}]], 'lineno': 50}
{'variable': 'test_data', 'data_source': [['full_reviews', {'left_op': ['full_reviews', 'review_date'], 'operator': [<ast.Gt object at 0x7efcd729be80>], 'right': 'split_date'}]], 'lineno': 51}
{'variable': ['train_data', 'is_helpful'], 'data_source': [{'left_op': ['train_data', 'helpful_votes'], 'operator': [<ast.Gt object at 0x7efcd729be80>], 'right': 0}], 'lineno': 53}
{'variable': ['test_data', 'is_helpful'], 'data_source': [{'left_op': ['test_data', 'helpful_votes'], 'operator': [<ast.Gt object at 0x7efcd729be80>], 'right': 0}], 'lineno': 54}
{'variable': 'train_labels', 'data_source': [{'func_call': 'label_binarize', 'data_file': [['train_data', 'is_helpful']], 'params': [{'classes': [True, False]}]}], 'lineno': 56}
{'variable': 'test_labels', 'data_source': [{'func_call': 'label_binarize', 'data_file': [['test_data', 'is_helpful']], 'params': [{'classes': [True, False]}]}, {'func_call': {'from': 'np', 'method': 'zeros_like'}, 'data_file': ['x'], 'params': []}, {'func_call': {'from': 'np', 'method': 'log'}, 'data_file': ['x'], 'params': [{'out': None}, {'where': {'left_op': 'x', 'operator': [<ast.NotEq object at 0x7efcd729bfa0>], 'right': 0}}]}], 'lineno': 57}
{'variable': 'one_hot', 'data_source': [{'func_call': 'Pipeline', 'data_file': [[('impute', {'func_call': 'SimpleImputer', 'data_file': [], 'params': [{'strategy': 'most_frequent'}]}), ('encode', {'func_call': 'OneHotEncoder', 'data_file': [], 'params': [{'handle_unknown': 'ignore'}]})]], 'params': []}], 'lineno': 69}
{'variable': 'scale', 'data_source': [{'func_call': 'Pipeline', 'data_file': [[('impute', {'func_call': 'SimpleImputer', 'data_file': [], 'params': [{'strategy': 'mean'}]}), ('log_transform', {'func_call': 'FunctionTransformer', 'data_file': [None], 'params': []}), ('scale', {'func_call': 'StandardScaler', 'data_file': [], 'params': []})]], 'params': []}], 'lineno': 74}
{'variable': 'hashing', 'data_source': [{'func_call': 'HashingVectorizer', 'data_file': [], 'params': [{'ngram_range': (1, 3)}, {'n_features': 100}]}], 'lineno': 80}
{'variable': 'nn', 'data_source': [{'func_call': 'Sequential', 'data_file': [[{'func_call': 'Dense', 'data_file': [256], 'params': [{'activation': 'relu'}]}, {'func_call': 'Dropout', 'data_file': [0.3], 'params': []}, {'func_call': 'Dense', 'data_file': [64], 'params': [{'activation': 'relu'}]}, {'func_call': 'Dense', 'data_file': [2], 'params': [{'activation': 'softmax'}]}]], 'params': []}], 'lineno': 90}
{'variable': 'target_categories', 'data_source': [['Digital_Video_Games']], 'lineno': 99}
{'variable': 'split_date', 'data_source': ['2015-07-31'], 'lineno': 100}
{'variable': 'reviews', 'data_source': [{'func_call': 'load_data', 'data_file': ['target_categories', '2015-01-01'], 'params': [{'verified_only': True}]}], 'lineno': 108}
{'variable': ('train_data', 'test_data', 'train_labels', 'test_labels'), 'data_source': [{'func_call': 'temporal_split', 'data_file': ['reviews', 'split_date'], 'params': []}], 'lineno': 109}
{'variable': 'feature_transformation', 'data_source': [{'func_call': 'feature_encoding', 'data_file': [], 'params': [{'numerical': ['star_rating']}, {'categorical': ['vine', 'verified_purchase', 'category_id']}, {'text': 'title_and_review'}]}], 'lineno': 111}
{'variable': 'pipeline', 'data_source': [{'func_call': 'Pipeline', 'data_file': [[('features', 'feature_transformation'), ('learner', {'func_call': 'KerasClassifier', 'data_file': ['create_mlp'], 'params': []})]], 'params': []}], 'lineno': 116}
{'variable': 'model', 'data_source': [{'func_call': {'from': 'pipeline', 'method': 'fit'}, 'data_file': ['train_data', 'train_labels'], 'params': []}, None], 'lineno': 120}
